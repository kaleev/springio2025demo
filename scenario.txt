================================================================================
TASK ‚Äì ‚ÄúADD RANDOM CUSTOMER‚Äù HANGS, THEN DUPLICATES
================================================================================
Goal  
The ‚ÄúAdd Random Customer‚Äù button on the home page must add exactly **one**
customer with a **random** name every time it is pressed.

There are three independent defects to fix:

  1. The first click never returns ‚Äì the request is stuck in a nested
     transaction started in TransactionLevel5Service.
  2. Spring wires **MockTransactionLevel4Service** instead of the real
     DemoTransactionLevel4Service, causing an extra database call.
  3. Property **user.random.names** resolves to *false*, so fixed names
     are used even after the hang is gone.

Follow the steps below to verify and remove each defect.

-------------------------------------------------------------------------------
STEP-BY-STEP

1.  Start the application and press **Add Random Customer** once.  
    The browser keeps loading ‚Äì reproduce the hang.

2.  Set a breakpoint on the first line of  
    `CustomerService#createRandomCustomer(‚Ä¶)`, restart the application, and repeat the click.
    You should reach the breakpoint **twice**:
        ‚Ä¢ the first hit originates from *TransactionLevel1Service* (outer transaction)
        ‚Ä¢ the second hit originates from *TransactionLevel5Service* (inner transaction)
    Inspect the call stack on the second hit to confirm that the inner
    transaction (`Propagation.REQUIRES_NEW`) is waiting for a lock held by
    the outer one.


3.  Open **TransactionLevel5Service** and remove the custom propagation:
        ‚Ä¢ Delete  `propagation = Propagation.REQUIRES_NEW`
        ‚Ä¢ Keep the default `@Transactional` only.
        ‚Ä¢ Restart the application

4.  Open **TransactionLevel3Service**:
        ‚Ä¢ Make sure it injects correct TransactionLevel4Service.
        ‚Ä¢ Set a breakpoint at `TransactionLevel1Service#processTransactionLevel3(...)`
        ‚Ä¢ Restrict the mock service to the *test* profile.
        ‚Ä¢ Restart the application

5.  Restart the application.  
    Click the button again ‚Äì the request now returns, but the second click fails with ‚Äúduplicate username‚Äù.

6.  During debugging you will notice that the flag  
    `useRandomNames` is *false*.  
    Locate **user.random.names** in the property files and set it to `true`
    for the active profile (e.g. in *application-demo.properties*).

7.  Restart once more. Press **Add Random Customer** a few times:  
    ‚Ä¢ The page returns immediately.  
    ‚Ä¢ Each click inserts one customer.  
    ‚Ä¢ Names are different every time.

--------------------------------------------------------------------------------
YOU‚ÄôRE DONE üéâ